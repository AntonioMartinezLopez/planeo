name: "Backend Test"
run-name: Build backend service on ${{ github.ref }}
on:
  push:
    paths:
      - backend/**

jobs:
  backend-dependencies:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Verify Go module consistency
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

  backend-format:
    runs-on: ubuntu-latest
    needs: backend-dependencies
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4
      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest
      - name: Check Go formatting
        run: |
          unformatted_files=$(gofmt -l .)
          if [ -n "$unformatted_files" ]; then
            echo "The following files are not correctly formatted:"
            echo "$unformatted_files"
            echo "Run 'gofmt -w .' to fix formatting."
            exit 1
          fi
      - name: Check Go imports
        run: |
          unformatted_files=$(goimports -l .)
          if [ -n "$unformatted_files" ]; then
            echo "The following files have incorrect imports:"
            echo "$unformatted_files"
            echo "Run 'goimports -w .' to fix imports."
            exit 1
          fi

  backend-vet:
    runs-on: ubuntu-latest
    needs: backend-dependencies
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Check Go vet
        run: go vet ./...

  backend-unit-test:
    runs-on: ubuntu-latest
    needs: backend-dependencies
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run unit tests
        run: go test ./... -v -short

  backend-integration-test:
    runs-on: ubuntu-latest
    needs: backend-dependencies
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install goose
        run: |
          go install github.com/pressly/goose/v3/cmd/goose@latest
      - name: Run integration tests
        run: go test ./... -v
