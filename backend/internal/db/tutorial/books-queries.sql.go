// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: books-queries.sql

package tutorial

import (
	"context"
)

const getAuthorBooks = `-- name: GetAuthorBooks :many
SELECT books, id, name, bio FROM books_with_author
`

func (q *Queries) GetAuthorBooks(ctx context.Context) ([]BooksWithAuthor, error) {
	rows, err := q.db.Query(ctx, getAuthorBooks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []BooksWithAuthor
	for rows.Next() {
		var i BooksWithAuthor
		if err := rows.Scan(
			&i.Books,
			&i.ID,
			&i.Name,
			&i.Bio,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
